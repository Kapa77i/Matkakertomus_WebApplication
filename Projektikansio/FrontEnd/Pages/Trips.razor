@page "/trips"

@using System.Threading.Tasks
@using System.Net.Http
@using System.Net.Http.Json
@using SharedLib;
@inject NavigationManager NavigationManager
@inject ILogger<Index> Logger
@inject HttpClient Http
@inject SharedLib.LoginState loginState;


<h1>Omat matkat</h1>

@*
voi lisätä, selata, päivittää ja poistaa omia matkoja ja niihin liitettyjä tarinoita ja kuvia
voi merkitä matkan yksityiseksi, jolloin kukaan muu ei saa nähdä kyseistä matkaa, eikä siihen kuuluvia tarinoita tai kuvia
navigointi tarinat- ja kuvat-sivuille voi tapahtuma päävalikon tai sivukohtaisen valikon kautta oman harkinnan mukaan
HUOM! Porukan matkat- ja Omat matkat-sivut saisivat olla mahdollisimman yhdenmukaisia
*@

@if (tarinas == null && matkakohde == null)
{
        <h2>  <img src="/images/loading.gif" width="150" /></h2>
}
else
{
   @* @foreach (var matka in matkas)
    {
        //tarina = tarinas.FirstOrDefault(m => m.idmatka == matka.idmatka);
        var matkaajaid = loginState.loggedUser.idmatkaaja;

        

        if (matka.idmatkaaja == matkaajaid)
        {
            tarina = tarinas.FirstOrDefault(m => m.idmatka == matka.idmatka);
            matkakohde = matkakohdes.FirstOrDefault(m => m.idmatkakohde == tarina.idmatkakohde);
           // matkakohde = matkakohdes.FirstOrDefault(m => m.idmatkakohde == matka.idmatkakohde);

            <div style="float: left; width: 33.33%; padding: 15px;">            
                <p style="text-align:left">Matka nro: @matka.idmatka.ToString()</p>
                <p>Matkan alkupvm @matka.alkupvm.ToString()Replace("0.00.00", "")</p>
                <p>Matkan loppupvm @matka.loppupvm.ToString()Replace("0.00.00", "")</p>
                <p>Matkakohde: @matkakohde.kohdenimi</p>
            </div>
        }

    }*@


    @foreach (var tarina in tarinas)
    {
        matka = matkas.FirstOrDefault(m => m.idmatka == tarina.idmatka);
        var matkaajaid = loginState.loggedUser.idmatkaaja;
        

        if(matka.idmatkaaja == matkaajaid)
        {
             matkakohde = matkakohdes.FirstOrDefault(m => m.idmatkakohde == tarina.idmatkakohde);

                              <div style="float: left; width: 33.33%; padding: 15px;">
                                        <h2 style="text-align:left">Matka nro @tarina.idmatka.ToString()</h2>
                                        <div style="text-align:left"><img src="/tripPictures/@matkakohde.kuva" width="150" /></div>
                                        <p style="text-align:left">Tarinan nro: @tarina.idtarina.ToString()</p>
                                        <p>Tarinan kirjoitus pvm: @tarina.pvm.ToString().Replace("0.00.00", "")</p>
                                        <p>Matkakohde: @matkakohde.kohdenimi</p>
                                        <p>@tarina.teksti</p>
                                    </div>
        }

    }
}

@code {
    List<SharedLib.matkaDTO>? trips = new List<SharedLib.matkaDTO>();

    private List<SharedLib.tarinaDTO>? tarinas;
    private List<SharedLib.matkakohdeDTO>? matkakohdes;
    private List<SharedLib.matkaDTO>? matkas;
    //private List<SharedLib.matkaajaDTO>? matkaajas;
    //private List<SharedLib.matkaajaDTO>? auth;
    private SharedLib.matkakohdeDTO matkakohde;
    private SharedLib.matkaDTO matka;
    private SharedLib.matkaajaDTO matkaaja;

    public string Email { get; set; }
    private string Password { get; set; }
    private matkaajaDTO? response = new matkaajaDTO();

    protected override async Task OnInitializedAsync()
    {
        //Haetaan kaikki matkat         >>> MUOKKAA: Haetaan vain kirjautuneen henkilön matkat > CRUD + loginstate.loggedUser tms.

        tarinas = await Http.GetFromJsonAsync<List<SharedLib.tarinaDTO>>("/api/Tarinas");
        matkakohdes = await Http.GetFromJsonAsync<List<SharedLib.matkakohdeDTO>>("/api/Matkakohdes");
        matkas = await Http.GetFromJsonAsync<List<SharedLib.matkaDTO>>("/api/Matkas");



        var matkaajaid = loginState.loggedUser.idmatkaaja;
        Console.WriteLine("Matkaajaid on = " + matkaajaid);
        //Console.WriteLine("Matkaaja id= " + matkaaja.idmatkaaja);
        //matkaajas = await Http.GetFromJsonAsync<List<SharedLib.matkaajaDTO>>("/api/Matkaajas");

        //auth = await Http.GetFromJsonAsync<List<SharedLib.matkaajaDTO>>("/api/Auth");

        @*loginState.loggedUser = matkaajas.FirstOrDefault(m => m.idmatkaaja == matka.idmatkaaja)*@
    }
}
