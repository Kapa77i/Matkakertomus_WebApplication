@page "/trips/delete/{IdMatka:long}"

@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks

@inject NavigationManager NavigationManager
@inject ILogger<Index> Logger
@inject HttpClient Http
@inject SharedLib.LoginState loginState;

@if (loginState.isLoggedIn)
{


    @if (deletetrip != null)
    {
        <a href="/trips">Omat matkat</a>
        <h2>@deletetrip.idmatka</h2>
        <h3>Haluatko varmasti poistaa matkan (ja sen tarinat)?</h3>
        <div style="text-align:center">
            <EditForm Model="@deletetrip" OnValidSubmit="@DeleteTrips">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div>
                    <label>
                        Matkaaja(t)
                        <InputNumber class="form-control" id="matkaaja" disabled @bind-Value="deletetrip.idmatkaaja" />
                    </label>
                </div>
                <div>
                    <label>
                        Aloitus pvm
                        <InputDate class="form-control" id="alku" disabled @bind-Value="deletetrip.alkupvm" />
                    </label>
                </div>
                <div>
                    <label>
                        Loppu pvm
                        <InputDate class="form-control" id="loppu" disabled @bind-Value="deletetrip.loppupvm" />
                    </label>
                </div>
                <div>
                    <label>
                        Yksityisyys
                        <InputRadioGroup class="form-control" id="yksityinen" disabled @bind-Value="deletetrip.yksityinen">
                            <br />
                            <InputRadio disabled Value="0" />Yksityinen @*Saako tänne arvon alustettua/näytettyä?*@
                            <InputRadio disabled Value="1" />Julkinen
                        </InputRadioGroup>
                    </label>
                </div>
                <button type="submit" class="btn btn-danger" disabled="@isSubmitting">Poista</button>
            </EditForm>
        </div>
    }
}
else
{
    <h2>  <img src="/images/loading.gif" width="150" /></h2>
    <h2>Kirjaudu sisään poistaaksesi matkoja</h2>
}

@code {
    bool isSubmitting;
    SharedLib.matkaDTO? deletetrip = new SharedLib.matkaDTO();

    [Parameter]
    public long? IdMatka { get; set; }


    protected override async Task OnInitializedAsync()
    {

        deletetrip = await Http.GetFromJsonAsync<SharedLib.matkaDTO>($"api/Matkas/{IdMatka}");

        await base.OnInitializedAsync();
    }

    private async Task DeleteTrips(){
        try{
            isSubmitting = true;
            var result = await Http.DeleteAsync($"api/Matkas/{IdMatka}"); //VOIKO POISTAA VAIKKA ON TARINOITA, VAI PITÄÄKÖ TARINAT POISTAA ENSIN?

            NavigationManager.NavigateTo($"/trips");
        }
        catch(Exception e){
            Console.WriteLine(e.Message);
        }
        
    }


}
