@page "/grouptrips"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http
@inject SharedLib.LoginState loginState

<style>
{

</style>

<h1>Porukan Matkat</h1>
@*voi selata (ei-yksityisiä) porukan matkoja ja niihin liitettyjä tarinoita ja kuvia*@

@if (tarinas == null && matkakohde == null)
{
    <h2>  <img src="/images/loading.gif" width="150" /></h2>
}
else
{

    @foreach (var tarina in tarinas)
    {
        matka = matkas.FirstOrDefault(m => m.idmatka == tarina.idmatka);

        //Tsekataan onko matka yksityinen vai ei, 1 == public?
        if (matka.yksityinen == 1)
        {
            matkakohde = matkakohdes.FirstOrDefault(m => m.idmatkakohde == tarina.idmatkakohde);

            <div style="float: left; width: 33.33%; padding: 15px;">
                <h2 style="text-align:left">Matka nro @tarina.idmatka.ToString()</h2>
                <div @onclick="OnClick" style="text-align:left"><img src="/tripPictures/@matkakohde.kuva" width="150" /></div>
                <p style="text-align:left">Tarinan nro: @tarina.idtarina.ToString()</p>
                <p>Tarinan kirjoitus pvm: @tarina.pvm.ToString().Replace("0.00.00", "")</p>
                <p>Matkakohde: @matkakohde.kohdenimi</p>
                <p>@tarina.teksti</p>
            </div>
        }

        else 
        {

        }
    }
}

@code {
    private List<SharedLib.kuvaDTO>? kuvatus;
    private List<SharedLib.tarinaDTO>? tarinas;
    private List<SharedLib.matkakohdeDTO>? matkakohdes;
    private List<SharedLib.matkaDTO>? matkas;
    private SharedLib.matkakohdeDTO matkakohde;
    private SharedLib.matkaDTO matka;


    public string Hidden { get; set; }

    protected override async Task OnInitializedAsync()
    {
        tarinas = await Http.GetFromJsonAsync<List<SharedLib.tarinaDTO>>("/api/Tarinas");
        matkakohdes = await Http.GetFromJsonAsync<List<SharedLib.matkakohdeDTO>>("/api/Matkakohdes");
        matkas = await Http.GetFromJsonAsync<List<SharedLib.matkaDTO>>("/api/Matkas");
    }


    protected void OnClick(MouseEventArgs mouseEventArgs)
    {
        
    }


}