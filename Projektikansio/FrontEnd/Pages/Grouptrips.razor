@page "/grouptrips"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http

<style>
    * {
        box-sizing: border-box;
    }

    body {
        margin: 0;
    }

    /* Style the header */
    .header {
        background-color: #f1f1f1;
        padding: 20px;
        text-align: center;
    }

    /* Style the top navigation bar */
    .topnav {
        overflow: hidden;
        background-color: #333;
    }

        /* Style the topnav links */
        .topnav a {
            float: left;
            display: block;
            color: #f2f2f2;
            text-align: center;
            padding: 14px 16px;
            text-decoration: none;
        }

            /* Change color on hover */
            .topnav a:hover {
                background-color: #ddd;
                color: black;
            }

    /* Create three equal columns that floats next to each other */
    .column {
        float: left;
        width: 33.33%;
        padding: 15px;
    }

    /* Clear floats after the columns */
    .row:after {
        content: "";
        display: table;
        clear: both;
    }

</style>
<h1>Porukan Matkat</h1>
@*voi selata (ei-yksityisiä) porukan matkoja ja niihin liitettyjä tarinoita ja kuvia*@

@*@if (tarina != null)
{

    <table style="width:100%">
        <tr>
            <th>TarinanId</th>
            <th>Matkan pvm</th>
            <th>MatkanId</th>
            <th>MatkakohteenId</th>
            <th>Tarina</th>
            <th>Kuvat</th>

        </tr>
        @foreach (var tarina in tarina)
        {
            <tr>
               <td>@tarina.idtarina.ToString()</td>
                <td>@tarina.pvm.ToString()</td>
                <td>@tarina.idmatka.ToString()</td>
                <td>@tarina.idmatkakohde.ToString()</td>
                <td>@tarina.teksti.ToString()</td>
                <th>@tarina.idtarina.ToString()</th>
            </tr>
        }

    </table>
}
else
{
    <h2>  <img src="/images/loading.gif" width="150" /></h2>

}*@





   
            @if (tarina != null)
            {
                @foreach (var tarina in tarina)
            {
  
                <div class="column">
                    <h2>Matka nro @tarina.idmatka.ToString()</h2>
                    <p>Tarinan nro: @tarina.idtarina.ToString()</p>
                    <p>Tarinan kirjoitus pvm: @tarina.pvm.ToString()</p>
                    <p>Matkakohde: @tarina.</p>
                

            <p>@tarina.teksti</p>
                </div>
 
                }
            }
            else
            {
            <div class="column">
                <h2>Column</h2>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet pretium urna. Vivamus venenatis velit nec neque ultricies, eget elementum magna tristique. Quisque vehicula, risus eget aliquam placerat, purus leo tincidunt eros, eget luctus quam orci in velit. Praesent scelerisque tortor sed accumsan convallis.</p>
            </div>
            }
    



@code {
    private List<SharedLib.kuvaDTO>? kuva;
    private List<SharedLib.tarinaDTO>? tarina;
    private List<SharedLib.tarinaDTO>? tarinas;
    private IEnumerable<SharedLib.matkakohdeDTO>? matkakohde;
    private List<SharedLib.matkakohdeDTO>? matkakohdes;

    protected override async Task OnInitializedAsync()
    {
        tarina = await Http.GetFromJsonAsync<List<SharedLib.tarinaDTO>>("/api/Tarinas");

        if (tarina != null)
        {
            matkakohdes = await Http.GetFromJsonAsync<List<SharedLib.matkakohdeDTO>>("/api/Matkakohdes");

            if(matkakohdes != null)
            {
              /*  foreach(var t in tarina){

                      matkakohde = matkakohdes.Where(x => x.idmatkakohde == t.idmatkakohde);
                  }*/
                
            }
        }
    }
    

    }

@*//      if(tarina !=null)
//    {
//        person = people.FirstOrDefault(x => x.Id == Id);
//        infos = await Http.GetFromJsonAsync<ContactInfo[]>("/contactInfo");

//        if(infos != null)
//        {
//            info = infos.Where(x => x.PersonId == Id).ToArray();

//            if (infos != null)
//            {
//                addresses = await Http.GetFromJsonAsync<Address[]>("/address");
//    }
//}
//    }
}*@
