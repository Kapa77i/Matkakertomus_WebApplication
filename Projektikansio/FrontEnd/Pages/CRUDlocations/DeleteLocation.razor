@page "/locations/delete/{Id:long}"
@*tarvitseeko myös user?*@

@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks

@inject NavigationManager NavigationManager
@inject ILogger<Index> Logger
@inject HttpClient Http
@inject SharedLib.LoginState loginState;

@if(!loginState.isLoggedIn){

    <h2>  <img src="/images/loading.gif" width="150" /></h2>
    <h2>Kirjaudu sisään poistaaksesi matkakohteen</h2>
}
else{
    
    @if (location != null)
    {
        <h2>@location.kohdenimi</h2>
        <h3>Haluatko varmasti poistaa matkakohteen?</h3>

        <div style="text-align:center">
            <div>@location.idmatkakohde</div>
            <div>@location.kuva</div>
            <img src="tripPictures/@location.kuva" width="133" height="133" alt="1" />
            <div>@location.kohdenimi</div>
            <div>@location.paikkakunta</div>
            <div>@location.maa</div>
            <div>@location.kuvausteksti</div>
            <br />
            <button type="submit" class="btn btn-danger" disabled="@isSubmitting" onclick="@DeleteLocations">Poista</button>
        </div>
    }
    else
    {
        <div style="text-align:center">Hupsista! <br />Jokin meni nyt vikaan. <br /> :( </div>
    }
}


@code {
    bool isSubmitting;
    SharedLib.matkakohdeDTO? location = new SharedLib.matkakohdeDTO();

    [Parameter]
    public string? User { get; set; }

    [Parameter]
    public long? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var data = await Http.GetAsync($"api/Matkakohdes/{Id}");
        location = await data.Content.ReadFromJsonAsync<SharedLib.matkakohdeDTO>();

        await base.OnInitializedAsync();
    }

    private async Task DeleteLocations()
    {
        try{
            isSubmitting = true;
            var result = await Http.DeleteAsync($"api/Matkakohdes/{Id}");

            //saako tähän väliin pyöritettyä pyörää?
            NavigationManager.NavigateTo($"/locations");
        }
        catch(Exception e){
            Console.WriteLine(e.Message);
        }

    }
}
